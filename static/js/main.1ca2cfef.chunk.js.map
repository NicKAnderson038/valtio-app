{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["state","proxy","number","Ticks","snapshot","useProxy","className","nested","ticks","Figure","Controls","viewBox","fill","xmlns","onClick","d","App","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAIMA,EAAQC,YAAM,CAAEC,OAAQ,IAM9B,SAASC,IACP,IAAMC,EAAWC,YAASL,GAE1B,OAAO,sBAAKM,UAAU,QAAf,sBAAiCF,EAASG,OAAOC,SAG1D,SAASC,IACP,IAAML,EAAWC,YAASL,GAE1B,OAAO,qBAAKM,UAAU,SAAf,SAAyBF,EAASF,SAG3C,SAASQ,IAEP,OACE,sBAAKJ,UAAU,OAAf,UACE,qBAAKK,QAAQ,cAAcC,KAAK,OAAOC,MAAM,6BAA7C,SACE,sBACEP,UAAU,eACVQ,QAAS,kBAAMd,EAAME,UACrBa,EAAE,oLACFH,KAAK,cAGT,qBAAKD,QAAQ,cAAcC,KAAK,OAAOC,MAAM,6BAA7C,SACE,sBACEP,UAAU,kBACVQ,QAAS,kBAAMd,EAAME,UACrBa,EAAE,4KACFH,KAAK,iBAOA,SAASI,IACtB,OACE,qCACE,cAACP,EAAD,IACA,cAACN,EAAD,IACA,cAACO,EAAD,OA5CNV,EAAMO,OAAS,CAAEC,MAAO,GACxBS,aAAY,kBAAMjB,EAAMO,OAAOC,UAAS,KCRxC,IAYeU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ca2cfef.chunk.js","sourcesContent":["import React from \"react\"\nimport { proxy, useProxy } from \"valtio\"\n\n// You wrap your state\nconst state = proxy({ number: 0 })\n\n// You can freely mutate it from anywhere you want ...\nstate.nested = { ticks: 0 }\nsetInterval(() => state.nested.ticks++, 800)\n\nfunction Ticks() {\n  const snapshot = useProxy(state)\n  // This component *only* renders when state.nested.ticks changes ...\n  return <div className=\"ticks\">Counter: {snapshot.nested.ticks}</div>\n}\n\nfunction Figure() {\n  const snapshot = useProxy(state)\n  // This component *only* renders when state.number changes ...\n  return <div className=\"figure\">{snapshot.number}</div>\n}\n\nfunction Controls() {\n  // This component simply mutates the state model, just like that ...\n  return (\n    <div className=\"logo\">\n      <svg viewBox=\"0 0 430 452\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          className=\"top-btn__svg\"\n          onClick={() => state.number++}\n          d=\"M214.83 0.95459C82.4432 0.95459 0.0568237 91.2955 0.0568237 226.523C0.0568237 272.651 9.76549 313.624 27.8727 347.545L340.5 36.3569C306.7 13.5435 264.249 0.95459 214.83 0.95459Z\"\n          fill=\"#A5FFCE\"\n        />\n      </svg>\n      <svg viewBox=\"0 0 430 452\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          className=\"bottom-btn__svg\"\n          onClick={() => state.number--}\n          d=\"M214.83 451.523C347.216 451.523 429.602 360.898 429.602 226.523C429.602 187.816 422.852 152.786 410.112 122.5L106 426.214C136.689 442.604 173.299 451.523 214.83 451.523Z\"\n          fill=\"#FFBEC2\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default function App() {\n  return (\n    <>\n      <Figure />\n      <Ticks />\n      <Controls />\n    </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}